# top-most EditorConfig file
root = true

# Don't use tabs for indentation.
[*]
indent_style = space
# (Please don't specify an indent_size here; that has too many unintended consequences.)

# Code files
[*.{cs,csx,vb,vbx,ts}]
indent_size = 4
insert_final_newline = true
trim_trailing_whitespace = true

# Xml project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 4

# Xml config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2
insert_final_newline = true
trim_trailing_whitespace = true

# JSON files
[*.json]
indent_size = 4
insert_final_newline = true
trim_trailing_whitespace = true

# Dotnet code style settings:
[*.{cs,vb}]
# Sort using and Import directives with System.* appearing first
dotnet_sort_system_directives_first = true

# Avoid "this." and "Me." if not necessary
dotnet_style_qualification_for_field = false : suggestion
dotnet_style_qualification_for_property = false : suggestion
dotnet_style_qualification_for_method = false : suggestion
dotnet_style_qualification_for_event = false : suggestion

# Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true : warning
dotnet_style_predefined_type_for_member_access = true : warning

# Suggest more modern language features when available
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion
dotnet_style_namespace_match_folder = true:suggestion
dotnet_style_operator_placement_when_wrapping = beginning_of_line
tab_width = 2
end_of_line = crlf

# CSharp code style settings:
[*.cs]
# Prefer "var" when obvious/useful
csharp_style_var_for_built_in_types = false : suggestion
csharp_style_var_when_type_is_apparent = true : suggestion
csharp_style_var_elsewhere = true : suggestion

# Prefer method-like constructs to have a block body
csharp_style_expression_bodied_methods = false:none
csharp_style_expression_bodied_constructors = false:none
csharp_style_expression_bodied_operators = false:none

# Prefer property-like constructs to have an expression-body
csharp_style_expression_bodied_properties = true:none
csharp_style_expression_bodied_indexers = true:none
csharp_style_expression_bodied_accessors = true:none

# Suggest more modern language features when available
csharp_style_pattern_matching_over_is_with_cast_check = true : suggestion
csharp_style_pattern_matching_over_as_with_null_check = true : suggestion
csharp_style_inlined_variable_declaration = true : suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true : warning

# Spacing
csharp_space_between_method_declaration_name_and_open_parenthesis = false : none
csharp_space_between_method_declaration_parameter_list_parentheses = false : none
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false : none
csharp_space_between_method_call_name_and_opening_parenthesis = false : none
csharp_space_between_method_call_parameter_list_parentheses = false : none
csharp_space_between_method_call_empty_parameter_list_parentheses = false : none
csharp_space_after_keywords_in_control_flow_statements = true : none
csharp_space_between_parentheses = never
csharp_space_after_cast = false : none
csharp_space_around_declaration_statements = ignore
csharp_space_before_open_square_brackets = false : none
csharp_space_between_empty_square_brackets = false : none
csharp_space_between_square_brackets = false : none
csharp_space_after_colon_in_inheritance_clause = true : none
csharp_space_after_comma = true : none
csharp_space_after_dot = false : none
csharp_space_after_semicolon_in_for_statement = true : none
csharp_space_before_colon_in_inheritance_clause = true : none
csharp_space_before_comma = false : none
csharp_space_before_dot = false : none
csharp_space_before_semicolon_in_for_statement = false : none
csharp_space_around_binary_operators = before_and_after

# Braces
csharp_prefer_braces = true:silent

# Indentation
csharp_indent_braces = false
csharp_indent_block_contents = true
csharp_indent_switch_labels = true
csharp_indent_case_contents = true
csharp_indent_labels = flush_left

# Wrapping
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false

# Newline settings
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# naming style conventions
# pascal case (SomeIdentifierHere)
dotnet_naming_style.pascal_case_style.capitalization = pascal_case
# came case (SomeIdentifierHere)
dotnet_naming_style.camel_case_style.capitalization = camel_case
# camel case with underscore prefix (_someIdentifierHere)
dotnet_naming_style.underscore_camel_case_style.required_prefix = _
dotnet_naming_style.underscore_camel_case_style.capitalization = camel_case

# naming style targets
dotnet_naming_symbols.methods_properties_classes.applicable_kinds = method,property,class,struct,delegate,enum,interface,event
dotnet_naming_symbols.locals_parameters.applicable_kinds = parameter
dotnet_naming_symbols.constant_fields.applicable_kinds = field
dotnet_naming_symbols.constant_fields.required_modifiers = const
dotnet_naming_symbols.static_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.static_readonly_fields.required_modifiers = static,readonly
dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private

# naming conventions
# name all methods, properties and classes using PamelCase
dotnet_naming_rule.methods_properties_classes_should_be_camel_case.severity = warning
dotnet_naming_rule.methods_properties_classes_should_be_camel_case.symbols = methods_properties_classes
dotnet_naming_rule.methods_properties_classes_should_be_camel_case.style = pascal_case_style

# name all constant or static/readonly fields using PascalCase
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style = pascal_case_style
dotnet_naming_rule.static_readonly_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.static_readonly_fields_should_be_pascal_case.symbols = static_readonly_fields
dotnet_naming_rule.static_readonly_fields_should_be_pascal_case.style = pascal_case_style

# name all private fields using _camelCase
dotnet_naming_rule.private_fields_should_be_underscore_camel_case.severity = warning
dotnet_naming_rule.private_fields_should_be_underscore_camel_case.symbols = private_fields
dotnet_naming_rule.private_fields_should_be_underscore_camel_case.style = underscore_camel_case_style

# name all locals and parameters fields using camelCase
dotnet_naming_rule.locals_parameters_should_be_underscore_camel_case.severity = warning
dotnet_naming_rule.locals_parameters_should_be_underscore_camel_case.symbols = locals_parameters
dotnet_naming_rule.locals_parameters_should_be_underscore_camel_case.style = camel_case_style
csharp_using_directive_placement = outside_namespace:silent
csharp_prefer_simple_using_statement = true:suggestion
csharp_style_namespace_declarations = block_scoped:silent
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_prefer_local_over_anonymous_function = true:suggestion
dotnet_diagnostic.SA1200.severity = silent
dotnet_diagnostic.SA1600.severity = silent
dotnet_diagnostic.SA1101.severity = silent
dotnet_diagnostic.SA1633.severity = silent
dotnet_diagnostic.SA0001.severity = silent
dotnet_diagnostic.SA1309.severity = silent
dotnet_diagnostic.SA1118.severity = silent
csharp_style_allow_embedded_statements_on_same_line_experimental = true:silent

# CS1591: Missing XML comment for publicly visible type or member
dotnet_diagnostic.CS1591.severity = none
dotnet_diagnostic.SA1310.severity = silent
dotnet_diagnostic.SA1201.severity = silent
dotnet_diagnostic.S3925.severity = silent
dotnet_diagnostic.SA1602.severity = silent
dotnet_diagnostic.SA1649.severity = silent
dotnet_diagnostic.SA1402.severity = silent
