AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Deploys the MCCE22 Smart Office AWS infrastructure

Parameters:

  SmtpHost:
    Type: String
    Default: smtp.gmail.com
  SmtpPort:
    Type: Number
    Default: 587
  SmtpUsername:
    Type: String
  SmtpPassword:
    Type: String
    NoEcho: true
  SmtpSendername:
    Type: String

Resources:

  Mcce22SmartOfficeVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
      - Key: Name
        Value: mcce22-smartoffice-vpc

  Mcce22SmartOfficeSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: mcce22-smartoffice-sg
      GroupDescription: Allows http traffic
      VpcId: !Ref Mcce22SmartOfficeVpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 1433
          ToPort: 1433
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: mcce22-smartoffice-sg

  Mcce22SmartOfficeIgw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: mcce22-smartoffice-igw

  Mcce22SmartOfficeAttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Mcce22SmartOfficeVpc
      InternetGatewayId: !Ref Mcce22SmartOfficeIgw

  Mcce22SmartOfficePublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Mcce22SmartOfficeVpc
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: us-east-1a
      Tags:
        - Key: Name
          Value: mcce22-smartoffice-public-subnet1

  Mcce22SmartOfficePublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Mcce22SmartOfficeVpc
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: us-east-1b
      Tags:
        - Key: Name
          Value: mcce22-smartoffice-public-subnet2           

  Mcce22SmartOfficeRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Mcce22SmartOfficeVpc
      Tags:
        - Key: Name
          Value: mcce22-smartoffice-public-routetable

  Mcce22SmartOfficePublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref Mcce22SmartOfficeRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref Mcce22SmartOfficeIgw

  Mcce22SmartOfficeSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Mcce22SmartOfficePublicSubnet1
      RouteTableId: !Ref Mcce22SmartOfficeRouteTable

  Mcce22SmartOfficeSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Mcce22SmartOfficePublicSubnet2
      RouteTableId: !Ref Mcce22SmartOfficeRouteTable      

  Mcce22SmartOfficeVpcEndpointS3:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal: '*'
          Action: '*'
          Resource: '*'
      RouteTableIds:
        - !Ref Mcce22SmartOfficeRouteTable
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      VpcId: !Ref Mcce22SmartOfficeVpc

  Mcce22SmartOfficeVpcEndpointSecretsManager:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.secretsmanager'
      PrivateDnsEnabled: true
      VpcId: !Ref Mcce22SmartOfficeVpc
      SubnetIds: 
        - !Ref Mcce22SmartOfficePublicSubnet1
        - !Ref Mcce22SmartOfficePublicSubnet2       
      SecurityGroupIds:
        - !Ref Mcce22SmartOfficeSG

  Mcce22SmartOfficeUsersImageBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: mcce22-smart-office-images
      AccessControl: PublicRead

  Mcce22SmartOfficeUsersImageBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Mcce22SmartOfficeUsersImageBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 's3:GetObject'
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref Mcce22SmartOfficeUsersImageBucket
                - /*
            Principal: '*'    

  # Mcce22SmartOfficeUsersSecret:
  #   Type: AWS::SecretsManager::Secret
  #   Properties:
  #     Name: mcce22-smart-office
  #     SecretString: !Sub |         
  #       {
  #         "BucketName": "${Mcce22SmartOfficeUsersImageBucket}",  
  #         "SmptConfiguration": {
  #           "host": "${SmtpHost}",
  #           "port": ${SmtpPort},
  #           "username": "${SmtpUsername}",
  #           "password": "${SmtpPassword}",
  #           "sendername": "${SmtpSendername}"
  #         }  
  #       }

  Mcce22SmartOfficeUsersTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    Properties:
      TableName: "mcce22-smart-office-users"
      AttributeDefinitions: 
        - AttributeName: "Id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "Id"
          KeyType: "HASH"
      ProvisionedThroughput: 
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"

  Mcce22SmartOfficeUserImagesTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    Properties:
      TableName: "mcce22-smart-office-userimages"
      AttributeDefinitions: 
        - AttributeName: "Id"
          AttributeType: "S"
        - AttributeName: "UserId"
          AttributeType: "S"          
      KeySchema:
        - AttributeName: "Id"
          KeyType: "HASH"          
      ProvisionedThroughput: 
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      GlobalSecondaryIndexes:
        - IndexName: UserId-index
          KeySchema:
            - AttributeName: "UserId"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput: 
            ReadCapacityUnits: "5"
            WriteCapacityUnits: "5"        

  Mcce22SmartOfficeWorkspacesTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    Properties:
      TableName: "mcce22-smart-office-workspaces"
      AttributeDefinitions: 
        - AttributeName: "Id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "Id"
          KeyType: "HASH"
      ProvisionedThroughput: 
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"   

  Mcce22SmartOfficeWorkspaceConfigurationsTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    Properties:
      TableName: "mcce22-smart-office-workspace-configurations"
      AttributeDefinitions: 
        - AttributeName: "Id"
          AttributeType: "S"
        - AttributeName: "WorkspaceId" 
          AttributeType: "S"              
        - AttributeName: "UserId"
          AttributeType: "S"   
        - AttributeName: "WorkspaceUser"
          AttributeType: "S"                  
      KeySchema:
        - AttributeName: "Id"
          KeyType: "HASH"
      ProvisionedThroughput: 
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      GlobalSecondaryIndexes:
        - IndexName: WorkspaceId-index
          KeySchema:
            - AttributeName: "WorkspaceId"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput: 
            ReadCapacityUnits: "5"
            WriteCapacityUnits: "5"
        - IndexName: UserId-index
          KeySchema:
            - AttributeName: "UserId"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"                        
          ProvisionedThroughput: 
            ReadCapacityUnits: "5"
            WriteCapacityUnits: "5"
        - IndexName: WorkspaceUser-index
          KeySchema:
            - AttributeName: "WorkspaceUser"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"                        
          ProvisionedThroughput: 
            ReadCapacityUnits: "5"
            WriteCapacityUnits: "5"            

  Mcce22SmartOfficeWorkspaceDataTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    Properties:
      TableName: "mcce22-smart-office-workspace-data"
      AttributeDefinitions: 
        - AttributeName: "Id"
          AttributeType: "S"
        - AttributeName: "Timestamp" 
          AttributeType: "S"         
      KeySchema:
        - AttributeName: "Id"
          KeyType: "HASH"
      ProvisionedThroughput: 
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      GlobalSecondaryIndexes:
        - IndexName: Timestamp-index
          KeySchema:
            - AttributeName: "Timestamp"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput: 
            ReadCapacityUnits: "5"
            WriteCapacityUnits: "5"

  Mcce22SmartOfficeBookingsTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    Properties:
      TableName: "mcce22-smart-office-bookings"
      AttributeDefinitions: 
        - AttributeName: "Id"
          AttributeType: "S"
        - AttributeName: "StartDate" 
          AttributeType: "S"         
        - AttributeName: "ActivationCode" 
          AttributeType: "S" 
      KeySchema:
        - AttributeName: "Id"
          KeyType: "HASH"
      ProvisionedThroughput: 
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"          
      GlobalSecondaryIndexes:
        - IndexName: StartDate-index
          KeySchema:
            - AttributeName: "StartDate"
              KeyType: "HASH"    
          Projection:
            ProjectionType: "ALL"        
          ProvisionedThroughput: 
            ReadCapacityUnits: "5"
            WriteCapacityUnits: "5"
        - IndexName: ActivationCode-index
          KeySchema:
            - AttributeName: "ActivationCode"
              KeyType: "HASH"    
          Projection:
            ProjectionType: "ALL"        
          ProvisionedThroughput: 
            ReadCapacityUnits: "5"
            WriteCapacityUnits: "5"

  Mcce22SmartOfficeUsersLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../Mcce22.SmartOffice.Users/
      Events:
        ProxyResource:
          Type: Api
          Properties:
            Path: /userapi/{proxy+}
            Method: ANY
        RootResource:
          Type: Api
          Properties:
            Path: /userapi
            Method: ANY
      FunctionName: mcce22-smart-office-users
      Handler: Mcce22.SmartOffice.Users
      MemorySize: 256
      Policies:
        - AWSLambda_FullAccess
      Role: arn:aws:iam::064088109127:role/LabRole
      Runtime: dotnet6
      Timeout: 30

  Mcce22SmartOfficeWorkspacesLambda:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: ../Mcce22.SmartOffice.Workspaces/
        Events:
          ProxyResource:
            Type: Api
            Properties:
              Path: /workspaceapi/{proxy+}
              Method: ANY
          RootResource:
            Type: Api
            Properties:
              Path: /workspaceapi
              Method: ANY
        FunctionName: mcce22-smart-office-workspaces
        Handler: Mcce22.SmartOffice.Workspaces
        MemorySize: 256
        Policies:
          - AWSLambda_FullAccess
        Role: arn:aws:iam::064088109127:role/LabRole
        Runtime: dotnet6
        Timeout: 30

  Mcce22SmartOfficeBookingsLambda:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: ../Mcce22.SmartOffice.Bookings/
        Events:
          ProxyResource:
            Type: Api
            Properties:
              Path: /bookingapi/{proxy+}
              Method: ANY
          RootResource:
            Type: Api
            Properties:
              Path: /bookingapi
              Method: ANY
        FunctionName: mcce22-smart-office-bookings
        Handler: Mcce22.SmartOffice.Bookings
        MemorySize: 256
        Policies:
          - AWSLambda_FullAccess
        Role: arn:aws:iam::064088109127:role/LabRole
        Runtime: dotnet6
        Timeout: 30

  Mcce22SmartOfficeNotificationsLambda:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: ../Mcce22.SmartOffice.Notifications/
        Events:
          RootGet:
            Type: Api
            Properties:
              Path: /notify
              Method: GET          
        FunctionName: mcce22-smart-office-notifications
        Handler: Mcce22.SmartOffice.Notifications::Mcce22.SmartOffice.Notifications.Functions::HandleRequest
        MemorySize: 256
        Policies:
          - AWSLambda_FullAccess
        Role: arn:aws:iam::064088109127:role/LabRole
        Runtime: dotnet6
        Timeout: 30

  # Mcce22SmartOfficeActivatorLambda:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     CodeUri: ../Mcce22.SmartOffice.DeviceActivator/
  #     Events:
  #       RootGet:
  #         Type: Api
  #         Properties:
  #           Path: /activate
  #           Method: GET          
  #     FunctionName: mcce22-smart-office-activator
  #     Handler: Mcce22.SmartOffice.DeviceActivator::Mcce22.SmartOffice.DeviceActivator.Functions::HandleRequest
  #     MemorySize: 256
  #     Policies:
  #       - AWSLambda_FullAccess
  #     Role: arn:aws:iam::064088109127:role/LabRole
  #     Runtime: dotnet6
  #     Timeout: 30

  Mcce22SmartOfficeActivatorLambda:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: ../Mcce22.SmartOffice.DeviceActivator/
        Events:
          ProxyResource:
            Type: Api
            Properties:
              Path: /activatorapi/{proxy+}
              Method: ANY
          RootResource:
            Type: Api
            Properties:
              Path: /activatorapi
              Method: ANY
        FunctionName: mcce22-smart-office-activator
        Handler: Mcce22.SmartOffice.DeviceActivator
        MemorySize: 256
        Policies:
          - AWSLambda_FullAccess
        Role: arn:aws:iam::064088109127:role/LabRole
        Runtime: dotnet6
        Timeout: 30         
        