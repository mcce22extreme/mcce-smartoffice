AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Deploys the MCCE22 Smart Office AWS infrastructure

Parameters:

 ImageBucketNameParameter:
    Type: String
    Description: The name of the s3 image bucket in which user images are stored.
 
 IoTDataEndpointAddressParameter:
    Type: String
    Description: The address of AWS IoT Core data endpoint.

 SmtpHostParameter:
    Type: String
    Description: The smtp host that is used to send emails.

 SmtpPortParameter:
    Type: String
    Description: The smtp port that is used to send emails.

 SmtpUsernameParameter: 
    Type: String
    Description: The username that is used to authenticate on the smtp server.

 SmtpPasswordParameter:
    Type: String
    Description: The password that is used to authenticate on the smtp server.

 SmtpSendernameParameter:
    Type: String
    Description: The sender name that is used to send emails.

 IAMRoleParameter:
    Type: String    
    Description: The AWS IAM role that is used as execution role for lambda functions.

Resources:

  Mcce22SmartOfficeImageBucketParameter:
    Type: AWS::SSM::Parameter
    DeletionPolicy: Delete
    Properties: 
      Name: ImageBucketName
      Description: The name of the s3 image bucket in which user images are stored.      
      Type: String
      Value: !Ref ImageBucketNameParameter

  Mcce22SmartOfficeSmtpHostParameter:
    Type: AWS::SSM::Parameter
    DeletionPolicy: Delete
    Properties: 
      Name: SmtpHost
      Description: The smtp host that is used to send emails.
      Type: String
      Value: !Ref SmtpHostParameter      

  Mcce22SmartOfficeSmtpPortParameter:
    Type: AWS::SSM::Parameter
    DeletionPolicy: Delete
    Properties: 
      Name: SmtpPort
      Description: The smtp port that is used to send emails.
      Type: String
      Value: !Ref SmtpPortParameter

  Mcce22SmartOfficeSmtpUsernameParameter:
    Type: AWS::SSM::Parameter
    DeletionPolicy: Delete
    Properties: 
      Name: SmtpUsername
      Description: The username that is used to authenticate on the smtp server.
      Type: String
      Value: !Ref SmtpUsernameParameter

  Mcce22SmartOfficeSmtpPasswordParameter:
    Type: AWS::SSM::Parameter
    DeletionPolicy: Delete
    Properties: 
      Name: SmtpPassword
      Description: The password that is used to authenticate on the smtp server.
      Type: String
      Value: !Ref SmtpPasswordParameter

  Mcce22SmartOfficeSmtpSendernameParameter:
    Type: AWS::SSM::Parameter
    DeletionPolicy: Delete
    Properties: 
      Name: SmtpSendername
      Description: The sender name that is used to send emails.
      Type: String
      Value: !Ref SmtpSendernameParameter

  Mcce22SmartOfficeIoTDataEndpointAddressParameter:
    Type: AWS::SSM::Parameter
    DeletionPolicy: Delete
    Properties: 
      Name: IoTDataEndpointAddress
      Description: The address of AWS IoT Core data endpoint.
      Type: String
      Value: !Ref IoTDataEndpointAddressParameter

  Mcce22SmartOfficeActivatorEndpointAddressParameter:
    Type: AWS::SSM::Parameter
    DeletionPolicy: Delete
    Properties: 
      Name: ActivatorEndpointAddress
      Description: The address of the MCCE22 IoT Device Activator api.
      Type: String
      Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/activator'

  Mcce22SmartOfficeUsersImageBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Ref ImageBucketNameParameter 
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false

  Mcce22SmartOfficeUsersImageBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Mcce22SmartOfficeUsersImageBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 's3:GetObject'
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref Mcce22SmartOfficeUsersImageBucket
                - /*
            Principal: '*'    

  Mcce22SmartOfficeUsersTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    Properties:
      TableName: "mcce22-smart-office-users"
      AttributeDefinitions: 
        - AttributeName: "Id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "Id"
          KeyType: "HASH"
      ProvisionedThroughput: 
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"

  Mcce22SmartOfficeUserImagesTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    Properties:
      TableName: "mcce22-smart-office-userimages"
      AttributeDefinitions: 
        - AttributeName: "Id"
          AttributeType: "S"
        - AttributeName: "UserId"
          AttributeType: "S"          
      KeySchema:
        - AttributeName: "Id"
          KeyType: "HASH"          
      ProvisionedThroughput: 
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      GlobalSecondaryIndexes:
        - IndexName: UserId-index
          KeySchema:
            - AttributeName: "UserId"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput: 
            ReadCapacityUnits: "5"
            WriteCapacityUnits: "5"        

  Mcce22SmartOfficeWorkspacesTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    Properties:
      TableName: "mcce22-smart-office-workspaces"
      AttributeDefinitions: 
        - AttributeName: "Id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "Id"
          KeyType: "HASH"
      ProvisionedThroughput: 
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"   

  Mcce22SmartOfficeWorkspaceConfigurationsTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    Properties:
      TableName: "mcce22-smart-office-workspace-configurations"
      AttributeDefinitions: 
        - AttributeName: "Id"
          AttributeType: "S"
        - AttributeName: "WorkspaceId" 
          AttributeType: "S"              
        - AttributeName: "UserId"
          AttributeType: "S"   
        - AttributeName: "WorkspaceUser"
          AttributeType: "S"                  
      KeySchema:
        - AttributeName: "Id"
          KeyType: "HASH"
      ProvisionedThroughput: 
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      GlobalSecondaryIndexes:
        - IndexName: WorkspaceId-index
          KeySchema:
            - AttributeName: "WorkspaceId"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput: 
            ReadCapacityUnits: "5"
            WriteCapacityUnits: "5"
        - IndexName: UserId-index
          KeySchema:
            - AttributeName: "UserId"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"                        
          ProvisionedThroughput: 
            ReadCapacityUnits: "5"
            WriteCapacityUnits: "5"
        - IndexName: WorkspaceUser-index
          KeySchema:
            - AttributeName: "WorkspaceUser"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"                        
          ProvisionedThroughput: 
            ReadCapacityUnits: "5"
            WriteCapacityUnits: "5"            

  Mcce22SmartOfficeWorkspaceDataTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    Properties:
      TableName: "mcce22-smart-office-workspace-data"
      AttributeDefinitions: 
        - AttributeName: "Id"
          AttributeType: "S"
        - AttributeName: "Timestamp" 
          AttributeType: "S"         
      KeySchema:
        - AttributeName: "Id"
          KeyType: "HASH"
      ProvisionedThroughput: 
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      GlobalSecondaryIndexes:
        - IndexName: Timestamp-index
          KeySchema:
            - AttributeName: "Timestamp"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput: 
            ReadCapacityUnits: "5"
            WriteCapacityUnits: "5"

  Mcce22SmartOfficeBookingsTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    Properties:
      TableName: "mcce22-smart-office-bookings"
      AttributeDefinitions: 
        - AttributeName: "Id"
          AttributeType: "S"
        - AttributeName: "StartDate" 
          AttributeType: "S"         
        - AttributeName: "ActivationCode" 
          AttributeType: "S" 
      KeySchema:
        - AttributeName: "Id"
          KeyType: "HASH"
      ProvisionedThroughput: 
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"          
      GlobalSecondaryIndexes:
        - IndexName: StartDate-index
          KeySchema:
            - AttributeName: "StartDate"
              KeyType: "HASH"    
          Projection:
            ProjectionType: "ALL"        
          ProvisionedThroughput: 
            ReadCapacityUnits: "5"
            WriteCapacityUnits: "5"
        - IndexName: ActivationCode-index
          KeySchema:
            - AttributeName: "ActivationCode"
              KeyType: "HASH"    
          Projection:
            ProjectionType: "ALL"        
          ProvisionedThroughput: 
            ReadCapacityUnits: "5"
            WriteCapacityUnits: "5"

  Mcce22SmartOfficeUsersLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../Mcce22.SmartOffice.Users/
      Events:
        ProxyResource:
          Type: Api
          Properties:
            Path: /userapi/{proxy+}
            Method: ANY
        RootResource:
          Type: Api
          Properties:
            Path: /userapi
            Method: ANY
      FunctionName: mcce22-smart-office-users
      Handler: Mcce22.SmartOffice.Users
      MemorySize: 256
      Policies:
        - AWSLambda_FullAccess
      Role: !Ref IAMRoleParameter
      Runtime: dotnet6
      Timeout: 30

  Mcce22SmartOfficeUsersLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: [ Mcce22SmartOfficeUsersLambda ]
    Properties:
      LogGroupName: !Sub /aws/lambda/${Mcce22SmartOfficeUsersLambda}
      RetentionInDays: 7

  Mcce22SmartOfficeWorkspacesLambda:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: ../Mcce22.SmartOffice.Workspaces/
        Events:
          ProxyResource:
            Type: Api
            Properties:
              Path: /workspaceapi/{proxy+}
              Method: ANY
          RootResource:
            Type: Api
            Properties:
              Path: /workspaceapi
              Method: ANY
        FunctionName: mcce22-smart-office-workspaces
        Handler: Mcce22.SmartOffice.Workspaces
        MemorySize: 256
        Policies:
          - AWSLambda_FullAccess
        Role: !Ref IAMRoleParameter
        Runtime: dotnet6
        Timeout: 30

  Mcce22SmartOfficeWorkspacesLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: [ Mcce22SmartOfficeWorkspacesLambda ]
    Properties:
      LogGroupName: !Sub /aws/lambda/${Mcce22SmartOfficeWorkspacesLambda}
      RetentionInDays: 7        

  Mcce22SmartOfficeBookingsLambda:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: ../Mcce22.SmartOffice.Bookings/
        Events:
          ProxyResource:
            Type: Api
            Properties:
              Path: /bookingapi/{proxy+}
              Method: ANY
          RootResource:
            Type: Api
            Properties:
              Path: /bookingapi
              Method: ANY
        FunctionName: mcce22-smart-office-bookings
        Handler: Mcce22.SmartOffice.Bookings
        MemorySize: 256
        Policies:
          - AWSLambda_FullAccess
        Role: !Ref IAMRoleParameter
        Runtime: dotnet6
        Timeout: 30

  Mcce22SmartOfficeBookingsLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: [ Mcce22SmartOfficeBookingsLambda ]
    Properties:
      LogGroupName: !Sub /aws/lambda/${Mcce22SmartOfficeBookingsLambda} 
      RetentionInDays: 7  

  Mcce22SmartOfficeNotificationsLambda:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: ../Mcce22.SmartOffice.Notifications/
        Events:
          RootGet:
            Type: Api
            Properties:
              Path: /notify
              Method: GET          
        FunctionName: mcce22-smart-office-notifications
        Handler: Mcce22.SmartOffice.Notifications::Mcce22.SmartOffice.Notifications.Functions::HandleRequest
        MemorySize: 256
        Policies:
          - AWSLambda_FullAccess
        Role: !Ref IAMRoleParameter
        Runtime: dotnet6
        Timeout: 30

  Mcce22SmartOfficeNotificationsLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: [ Mcce22SmartOfficeNotificationsLambda ]
    Properties:
      LogGroupName: !Sub /aws/lambda/${Mcce22SmartOfficeNotificationsLambda}
      RetentionInDays: 7           

  Mcce22SmartOfficeActivatorLambda:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: ../Mcce22.SmartOffice.DeviceActivator/
        Events:
          ProxyResource:
            Type: Api
            Properties:
              Path: /activatorapi/{proxy+}
              Method: ANY
          RootResource:
            Type: Api
            Properties:
              Path: /activatorapi
              Method: ANY
        FunctionName: mcce22-smart-office-activator
        Handler: Mcce22.SmartOffice.DeviceActivator
        MemorySize: 256
        Policies:
          - AWSLambda_FullAccess
        Role: !Ref IAMRoleParameter
        Runtime: dotnet6
        Timeout: 30

  Mcce22SmartOfficeActivatorLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: [ Mcce22SmartOfficeActivatorLambda ]
    Properties:
      LogGroupName: !Sub /aws/lambda/${Mcce22SmartOfficeActivatorLambda}  
      RetentionInDays: 7      

  Mcce22SmartOfficeDataIngressLambda:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: ../Mcce22.SmartOffice.DataIngress/
        Events:
          RootGet:
            Type: Api
            Properties:
              Path: /dataingress
              Method: POST          
        FunctionName: mcce22-smart-office-dataingress
        Handler: Mcce22.SmartOffice.DataIngress::Mcce22.SmartOffice.DataIngress.Functions::HandleRequest
        MemorySize: 256
        Policies:
          - AWSLambda_FullAccess
        Role: !Ref IAMRoleParameter
        Runtime: dotnet6
        Timeout: 30

  Mcce22SmartOfficeDataIngressLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: [ Mcce22SmartOfficeDataIngressLambda ]
    Properties:
      LogGroupName: !Sub /aws/lambda/${Mcce22SmartOfficeDataIngressLambda}
      RetentionInDays: 7        
        